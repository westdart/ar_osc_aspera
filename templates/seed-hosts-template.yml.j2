---

openshift_cluster_content:
- object: Projects
  content:
{% if 'parent' not in app_instance %}
{% set namespace = app_instance | app_namespace(deployment_phase) %}
{% set app_common_name = deployment_phase + '-' + app_instance.name %}
  - name: {{ app_common_name }} Project
    template: "{{ playbook_dir }}/../templates/project-template.yml"
    action: create
    params_from_vars:
      NAMESPACE: "{{ namespace }}"
      NAMESPACE_DISPLAY_NAME: "{{ namespace | upper }}"
    tags:
    - projects
    - aspera

{% endif %}

{% if 'serviceaccounts' in app_instance and app_instance.serviceaccounts | length > 0 %}
- object: Service Accounts for {{ deployment_phase | upper }}
  content:
{% for serviceaccount in app_instance.serviceaccounts | default([]) %}
  - name: {{ serviceaccount.name }}-serviceaccount
    namespace: "{{ serviceaccount.namespace }}"
    template: "{{ playbook_dir }}/../templates/serviceaccount-template.yml"
    action: apply
    params_from_vars:
      SA_NAME: {{ serviceaccount.name }}
      SA_NAMESPACE: {{ serviceaccount.namespace }}
    tags:
    - projects
    - serviceaccounts
    - aspera
    - amqbroker
    - amqic
{% endfor %}
    post_steps:
      - role: scc_binding
        vars:
          scc_binding_items: {{ app_instance.serviceaccounts | default([]) }}

{% endif %}

- object: Deployments {{ deployment_phase | upper }}
  content:
{% set app_short_name = app_instance | group_label %}
{% set app_common_name = deployment_phase + '-' + app_instance.name %}
{% set namespace = app_instance | app_namespace(deployment_phase) %}

# Aspera Config Map for {{ app_common_name }}
  - name: {{ app_short_name }}-aspera-config-map
    namespace: "{{ namespace }}"
    template: "{{ aspera_config_dest_templates }}/{{ app_instance.name }}/aspera-seed-files-cm.yml"
    action: apply
    tags:
    - aspera

{% endif %}

# Application instances
{% set app_short_name = app_instance | group_label %}
{% set app_common_name = deployment_phase + '-' + app_instance.name %}
{% set namespace = app_instance | app_namespace(deployment_phase) %}
{% if deploy_aspera is defined and deploy_aspera %}
# Aspera instance for {{ app_common_name }}
  - name: "{{ app_instance | aspera_application_name }}"
    namespace: "{{ namespace }}"
    template: "{{ aspera_config_dest_templates }}/{{ app_instance.name }}/aspera-k8s-template.yml"
    action: apply
    params_from_vars:
      APPLICATION_NAME: "{{ app_instance | aspera_application_name }}"
      SEED_FILES_CM: "{{ app_short_name }}-aspera-config-map"
      SEED_FILES_CONF_HASH: "{{ lookup('file', aspera_config_dest_templates + '/' + app_instance.name + '/aspera-seed-files-cm.yml') | hash('md5') }}"
{% if aspera_image is defined or 'aspera_image' in app_instance %}
      IMAGE_NAME: {{ app_instance.aspera_image | default(aspera_image) }}
{% endif %}
{% if aspera_image_ns is defined or 'aspera_image_ns' in app_instance %}
      IMAGE_STREAM_NAMESPACE: {{ app_instance.aspera_image_ns | default(aspera_image_ns) }}
{% endif %}
      APP_GROUP: "{{ app_instance | group_label }}"
      SSH_NODE_PORT: {{ app_instance.aspera_ssh_node_port | default('30022') }}
      FASP_NODE_PORT: {{ app_instance.aspera_fasp_node_port | default('30023') }}
    tags:
    - aspera

{% endif %}
{% endif %}
